{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 *
 * CUSTOM variables available to a ROW
 * field_background_color
 * field_background_image
 * field_border
 * field_column_border
 * field_horizontal_alignment
 * field_layout
 * field_row_content
 * field_triangle_separator
 * field_vertical_alignment
 * field_custom_css_class
 */
#}
{{ attach_library('oomph_paragraphs/row') }}

{% set class_reverse_order_for_desktop = '' %}
{% if paragraph.field_reverse_order_for_desktop.value == 1 %}
  {% set class_reverse_order_for_desktop = 'oomph-layout--col-reverse' %}
{% endif %}

{%
  set classes = [
    'oomph-paragraph',
    'oomph-paragraph__type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'oomph-paragraph__view-mode--' ~ view_mode|clean_class,
    paragraph.field_background_color.value ? paragraph.field_background_color.value|clean_class,
    paragraph.field_background_image.value|length > 0 ? 'oomph-background-image',
    paragraph.field_border.value ? 'border-row__' ~ paragraph.field_border.value|clean_class,
    paragraph.field_column_border.value ? 'border-column__' ~ paragraph.field_column_border.value|clean_class,
    paragraph.field_border_style.value ? 'border-style__' ~ paragraph.field_border_style.value|clean_class,
    paragraph.field_vertical_alignment.value ? paragraph.field_vertical_alignment.value|clean_class,
    paragraph.field_horizontal_alignment.value ? paragraph.field_horizontal_alignment.value|clean_class,
    paragraph.field_layout.value ? 'oomph-layout--' ~ paragraph.field_layout.value|clean_class,
    class_reverse_order_for_desktop,
    paragraph.field_triangle_separator.value ? 'triangle',
    paragraph.field_custom_css_class.value ? paragraph.field_custom_css_class.value
  ]
%}
{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% if paragraph.field_background_image.value|length > 0 %}
      <div class="oomph-background-image__mask">
        {% block row_background_image %}
          <figure class="oomph-background-image__wrapper">
            {{ content.field_background_image }}
          </figure>
        {% endblock row_background_image %}
    {% endif %}
    {% block content %}
      {{ content|without('field_background_color', 'field_background_image', 'field_border', 'field_column_border', 'field_border_style', 'field_vertical_alignment', 'field_horizontal_alignment', 'field_layout', 'field_triangle_separator', 'field_reverse_order_for_desktop', 'field_custom_css_class') }}
    {% endblock content %}
    {% if paragraph.field_background_image.value|length > 0 %}
      </div> {# end oomph-background-image__mask #}
    {% endif %}
  </div>
{% endblock paragraph %}
